{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmptyTextNode;\n/**\r\n * Tests a htmlparser2 node and returns whether is it a text node at the start and end of the line containing only\r\n * white space. This allows these node types to be excluded from the rendering because they are unnecessary.\r\n *\r\n * @param {Object} node The element object as created by htmlparser2\r\n * @returns {boolean} Whether the node is an empty text node\r\n */\nfunction isEmptyTextNode(node) {\n  return node.type === 'text' && /\\r?\\n/.test(node.data) && node.data.trim() === '';\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isEmptyTextNode","node","type","test","data","trim"],"sources":["C:/Users/tejas/OneDrive/Desktop/crypto-mart/crypto-mart/node_modules/react-html-parser/lib/utils/isEmptyTextNode.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isEmptyTextNode;\r\n/**\r\n * Tests a htmlparser2 node and returns whether is it a text node at the start and end of the line containing only\r\n * white space. This allows these node types to be excluded from the rendering because they are unnecessary.\r\n *\r\n * @param {Object} node The element object as created by htmlparser2\r\n * @returns {boolean} Whether the node is an empty text node\r\n */\r\nfunction isEmptyTextNode(node) {\r\n  return node.type === 'text' && /\\r?\\n/.test(node.data) && node.data.trim() === '';\r\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,IAAI,EAAE;EAC7B,OAAOA,IAAI,CAACC,IAAI,KAAK,MAAM,IAAI,OAAO,CAACC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,IAAIH,IAAI,CAACG,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;AACnF","ignoreList":[]},"metadata":{},"sourceType":"script"}