{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = htmlAttributesToReact;\nvar _BooleanAttributes = require('../dom/attributes/BooleanAttributes');\nvar _BooleanAttributes2 = _interopRequireDefault(_BooleanAttributes);\nvar _ReactAttributes = require('../dom/attributes/ReactAttributes');\nvar _ReactAttributes2 = _interopRequireDefault(_ReactAttributes);\nvar _isValidTagOrAttributeName = require('./isValidTagOrAttributeName');\nvar _isValidTagOrAttributeName2 = _interopRequireDefault(_isValidTagOrAttributeName);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\r\n * Returns the parsed attribute value taking into account things like boolean attributes\r\n *\r\n * @param {String} attribute The name of the attribute\r\n * @param {*} value The value of the attribute from the HTML\r\n * @returns {*} The parsed attribute value\r\n */\nvar getParsedAttributeValue = function getParsedAttributeValue(attribute, value) {\n  // if the attribute if a boolean then it's value should be the same as it's name\n  // e.g. disabled=\"disabled\"\n  var lowerBooleanAttributes = _BooleanAttributes2.default.map(function (attr) {\n    return attr.toLowerCase();\n  });\n  if (lowerBooleanAttributes.indexOf(attribute.toLowerCase()) >= 0) {\n    value = attribute;\n  }\n  return value;\n};\n\n/**\r\n * Takes an object of standard HTML property names and converts them to their React counterpart. If the react\r\n * version does not exist for an attribute then just use it as it is\r\n *\r\n * @param {Object} attributes The HTML attributes to convert\r\n * @returns {Object} The React attributes\r\n */\nfunction htmlAttributesToReact(attributes) {\n  return Object.keys(attributes).filter(function (attr) {\n    return (0, _isValidTagOrAttributeName2.default)(attr);\n  }).reduce(function (mappedAttributes, attribute) {\n    // lowercase the attribute name and find it in the react attribute map\n    var lowerCaseAttribute = attribute.toLowerCase();\n\n    // format the attribute name\n    var name = _ReactAttributes2.default[lowerCaseAttribute] || lowerCaseAttribute;\n\n    // add the parsed attribute value to the mapped attributes\n    mappedAttributes[name] = getParsedAttributeValue(name, attributes[attribute]);\n    return mappedAttributes;\n  }, {});\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","htmlAttributesToReact","_BooleanAttributes","require","_BooleanAttributes2","_interopRequireDefault","_ReactAttributes","_ReactAttributes2","_isValidTagOrAttributeName","_isValidTagOrAttributeName2","obj","__esModule","getParsedAttributeValue","attribute","lowerBooleanAttributes","map","attr","toLowerCase","indexOf","attributes","keys","filter","reduce","mappedAttributes","lowerCaseAttribute","name"],"sources":["C:/Users/Aryani/OneDrive/Documents/CRYPTO-n/Crypto-Mart/node_modules/react-html-parser/lib/utils/htmlAttributesToReact.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = htmlAttributesToReact;\r\n\r\nvar _BooleanAttributes = require('../dom/attributes/BooleanAttributes');\r\n\r\nvar _BooleanAttributes2 = _interopRequireDefault(_BooleanAttributes);\r\n\r\nvar _ReactAttributes = require('../dom/attributes/ReactAttributes');\r\n\r\nvar _ReactAttributes2 = _interopRequireDefault(_ReactAttributes);\r\n\r\nvar _isValidTagOrAttributeName = require('./isValidTagOrAttributeName');\r\n\r\nvar _isValidTagOrAttributeName2 = _interopRequireDefault(_isValidTagOrAttributeName);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/**\r\n * Returns the parsed attribute value taking into account things like boolean attributes\r\n *\r\n * @param {String} attribute The name of the attribute\r\n * @param {*} value The value of the attribute from the HTML\r\n * @returns {*} The parsed attribute value\r\n */\r\nvar getParsedAttributeValue = function getParsedAttributeValue(attribute, value) {\r\n\r\n  // if the attribute if a boolean then it's value should be the same as it's name\r\n  // e.g. disabled=\"disabled\"\r\n  var lowerBooleanAttributes = _BooleanAttributes2.default.map(function (attr) {\r\n    return attr.toLowerCase();\r\n  });\r\n  if (lowerBooleanAttributes.indexOf(attribute.toLowerCase()) >= 0) {\r\n    value = attribute;\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\n/**\r\n * Takes an object of standard HTML property names and converts them to their React counterpart. If the react\r\n * version does not exist for an attribute then just use it as it is\r\n *\r\n * @param {Object} attributes The HTML attributes to convert\r\n * @returns {Object} The React attributes\r\n */\r\nfunction htmlAttributesToReact(attributes) {\r\n\r\n  return Object.keys(attributes).filter(function (attr) {\r\n    return (0, _isValidTagOrAttributeName2.default)(attr);\r\n  }).reduce(function (mappedAttributes, attribute) {\r\n\r\n    // lowercase the attribute name and find it in the react attribute map\r\n    var lowerCaseAttribute = attribute.toLowerCase();\r\n\r\n    // format the attribute name\r\n    var name = _ReactAttributes2.default[lowerCaseAttribute] || lowerCaseAttribute;\r\n\r\n    // add the parsed attribute value to the mapped attributes\r\n    mappedAttributes[name] = getParsedAttributeValue(name, attributes[attribute]);\r\n\r\n    return mappedAttributes;\r\n  }, {});\r\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,qBAAqB;AAEvC,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,qCAAqC,CAAC;AAEvE,IAAIC,mBAAmB,GAAGC,sBAAsB,CAACH,kBAAkB,CAAC;AAEpE,IAAII,gBAAgB,GAAGH,OAAO,CAAC,mCAAmC,CAAC;AAEnE,IAAII,iBAAiB,GAAGF,sBAAsB,CAACC,gBAAgB,CAAC;AAEhE,IAAIE,0BAA0B,GAAGL,OAAO,CAAC,6BAA6B,CAAC;AAEvE,IAAIM,2BAA2B,GAAGJ,sBAAsB,CAACG,0BAA0B,CAAC;AAEpF,SAASH,sBAAsBA,CAACK,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEV,OAAO,EAAEU;EAAI,CAAC;AAAE;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,uBAAuB,GAAG,SAASA,uBAAuBA,CAACC,SAAS,EAAEd,KAAK,EAAE;EAE/E;EACA;EACA,IAAIe,sBAAsB,GAAGV,mBAAmB,CAACJ,OAAO,CAACe,GAAG,CAAC,UAAUC,IAAI,EAAE;IAC3E,OAAOA,IAAI,CAACC,WAAW,CAAC,CAAC;EAC3B,CAAC,CAAC;EACF,IAAIH,sBAAsB,CAACI,OAAO,CAACL,SAAS,CAACI,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;IAChElB,KAAK,GAAGc,SAAS;EACnB;EAEA,OAAOd,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,qBAAqBA,CAACkB,UAAU,EAAE;EAEzC,OAAOvB,MAAM,CAACwB,IAAI,CAACD,UAAU,CAAC,CAACE,MAAM,CAAC,UAAUL,IAAI,EAAE;IACpD,OAAO,CAAC,CAAC,EAAEP,2BAA2B,CAACT,OAAO,EAAEgB,IAAI,CAAC;EACvD,CAAC,CAAC,CAACM,MAAM,CAAC,UAAUC,gBAAgB,EAAEV,SAAS,EAAE;IAE/C;IACA,IAAIW,kBAAkB,GAAGX,SAAS,CAACI,WAAW,CAAC,CAAC;;IAEhD;IACA,IAAIQ,IAAI,GAAGlB,iBAAiB,CAACP,OAAO,CAACwB,kBAAkB,CAAC,IAAIA,kBAAkB;;IAE9E;IACAD,gBAAgB,CAACE,IAAI,CAAC,GAAGb,uBAAuB,CAACa,IAAI,EAAEN,UAAU,CAACN,SAAS,CAAC,CAAC;IAE7E,OAAOU,gBAAgB;EACzB,CAAC,EAAE,CAAC,CAAC,CAAC;AACR","ignoreList":[]},"metadata":{},"sourceType":"script"}